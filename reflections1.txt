Lesson 1 reflections
1) How did viewing a diff between two versions of a file help you spot the bug?
If something worked before, it is probable that a late change caused the mistake. The diff (CF in Windows) function showed every difference between 2 files.

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

The history allows us to understand how the file was created. We can possibly point out missing elements or problems seeing the older versions.

3) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

I think git commit is useful because you can logically separate the versions however if you work of different problems you may forget to mention something in the commit. On the other hand, you should be careful and save your file every now and then not to lose data or logical path.


4) Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because Git is specialized in code so it happens that one change affects more than one file.

5) How can you use the commands git log and git diff to view the history of files?

Git log shows all the different versions with their id on it and git diff allows to visualize the difference between two logs by putting git diff [fist id] [second id]. I had troubles to close both git log and git diff till I found out about the q for 'quit' button.

6) How might using version control make you more confident to make changes that could break something?

If I make a mistake, I can still find where the problem was made and go back to taht version.

7) How Do You Want to Use Git? test

I would like to use it with my projects  to be able to work together with my family memebers.